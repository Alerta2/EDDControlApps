# Generated by Django 4.0.3 on 2022-03-05 10:20

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdjuntosEventos',
            fields=[
                ('id_adjunto', models.AutoField(db_column='ID_ADJUNTO', primary_key=True, serialize=False)),
                ('titulo_adjunto', models.CharField(db_column='TITULO_ADJUNTO', max_length=50)),
                ('id_usuario', models.IntegerField(db_column='ID_USUARIO')),
                ('fecha_hora_local', models.DateTimeField(db_column='FECHA_HORA_LOCAL')),
                ('descripcion', models.CharField(blank=True, db_column='DESCRIPCION', max_length=500, null=True)),
            ],
            options={
                'db_table': 'adjuntos_eventos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AvisosMeteorologicosAemet',
            fields=[
                ('nivel', models.CharField(db_column='NIVEL', max_length=200, primary_key=True, serialize=False)),
                ('id_zona_meteo_aemet', models.CharField(db_column='ID_ZONA_METEO_AEMET', max_length=200)),
                ('fecha_comienzo', models.DateTimeField(db_column='FECHA_COMIENZO')),
                ('fecha_fin', models.DateTimeField(db_column='FECHA_FIN')),
                ('tipo_aviso', models.CharField(blank=True, db_column='TIPO_AVISO', max_length=200, null=True)),
                ('descripcion', models.CharField(blank=True, db_column='DESCRIPCION', max_length=200, null=True)),
                ('instruccion', models.CharField(blank=True, db_column='INSTRUCCION', max_length=200, null=True)),
                ('probabilidad', models.CharField(blank=True, db_column='PROBABILIDAD', max_length=200, null=True)),
                ('valido_actual', models.IntegerField(blank=True, db_column='VALIDO_ACTUAL', null=True)),
            ],
            options={
                'db_table': 'avisos_meteorologicos_aemet',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CalendarioAreas',
            fields=[
                ('id_area', models.AutoField(db_column='ID_AREA', primary_key=True, serialize=False)),
                ('nombre', models.CharField(db_column='NOMBRE', max_length=100)),
                ('icono', models.CharField(db_column='ICONO', max_length=100)),
                ('descripcion', models.CharField(blank=True, db_column='DESCRIPCION', max_length=200, null=True)),
                ('html_calendar', models.CharField(db_column='HTML_CALENDAR', max_length=100)),
                ('js_calendar', models.CharField(db_column='JS_CALENDAR', max_length=100)),
                ('css_calendar', models.CharField(db_column='CSS_CALENDAR', max_length=100)),
                ('js_refresh_calendar', models.CharField(db_column='JS_REFRESH_CALENDAR', max_length=100)),
            ],
            options={
                'db_table': 'calendario_areas',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CalendarioCambios',
            fields=[
                ('id_cambio', models.AutoField(db_column='ID_CAMBIO', primary_key=True, serialize=False)),
                ('operativo', models.IntegerField(db_column='OPERATIVO')),
                ('supervisado', models.IntegerField(db_column='SUPERVISADO')),
            ],
            options={
                'db_table': 'calendario_cambios',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CalendarioEventos',
            fields=[
                ('id_evento', models.AutoField(db_column='ID_EVENTO', primary_key=True, serialize=False)),
                ('fecha_local_comienzo', models.DateField(db_column='FECHA_LOCAL_COMIENZO')),
                ('fecha_local_fin', models.DateField(db_column='FECHA_LOCAL_FIN')),
                ('semana', models.IntegerField(db_column='SEMANA')),
            ],
            options={
                'db_table': 'calendario_eventos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CalendarioFestivos',
            fields=[
                ('fecha_local', models.DateField(db_column='FECHA_LOCAL', primary_key=True, serialize=False)),
                ('nombre', models.CharField(db_column='NOMBRE', max_length=100)),
            ],
            options={
                'db_table': 'calendario_festivos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CalendarioGuardias',
            fields=[
                ('id_guardia', models.AutoField(db_column='ID_GUARDIA', primary_key=True, serialize=False)),
                ('year', models.IntegerField(db_column='YEAR')),
                ('semana', models.IntegerField(db_column='SEMANA')),
                ('tipo_semana', models.IntegerField(db_column='TIPO_SEMANA')),
                ('fecha_local_comienzo', models.DateField(db_column='FECHA_LOCAL_COMIENZO')),
                ('fecha_local_fin', models.DateField(db_column='FECHA_LOCAL_FIN')),
                ('creador', models.IntegerField(db_column='CREADOR')),
                ('operativo', models.IntegerField(db_column='OPERATIVO')),
                ('supervisado', models.IntegerField(db_column='SUPERVISADO')),
            ],
            options={
                'db_table': 'calendario_guardias',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CalendarioPersonal',
            fields=[
                ('id_usuario', models.IntegerField(db_column='ID_USUARIO', primary_key=True, serialize=False)),
                ('color', models.CharField(db_column='COLOR', max_length=7)),
                ('operativo', models.IntegerField(db_column='OPERATIVO')),
            ],
            options={
                'db_table': 'calendario_personal',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CalendarioTipoEvento',
            fields=[
                ('id_tipo_evento', models.AutoField(db_column='ID_TIPO_EVENTO', primary_key=True, serialize=False)),
                ('nombre', models.CharField(db_column='NOMBRE', max_length=50)),
                ('color_fondo', models.CharField(db_column='COLOR_FONDO', max_length=7)),
                ('color_texto', models.CharField(db_column='COLOR_TEXTO', max_length=7)),
                ('descripcion', models.CharField(db_column='DESCRIPCION', max_length=500)),
                ('icono', models.CharField(db_column='ICONO', max_length=100)),
                ('permanencia', models.CharField(db_column='PERMANENCIA', max_length=100)),
            ],
            options={
                'db_table': 'calendario_tipo_evento',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CalendarioTurnos',
            fields=[
                ('id_turno', models.AutoField(db_column='ID_TURNO', primary_key=True, serialize=False)),
                ('descripcion', models.CharField(db_column='DESCRIPCION', max_length=100)),
                ('color_fondo', models.CharField(db_column='COLOR_FONDO', max_length=7)),
                ('color_texto', models.CharField(db_column='COLOR_TEXTO', max_length=7)),
                ('hora_local_comienzo', models.TimeField(db_column='HORA_LOCAL_COMIENZO')),
                ('hora_local_fin', models.TimeField(db_column='HORA_LOCAL_FIN')),
            ],
            options={
                'db_table': 'calendario_turnos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CalendarioUsuarios',
            fields=[
                ('id_usuario', models.AutoField(db_column='ID_USUARIO', primary_key=True, serialize=False)),
                ('nombre', models.CharField(db_column='NOMBRE', max_length=100)),
                ('telefono', models.IntegerField(db_column='TELEFONO')),
            ],
            options={
                'db_table': 'calendario_usuarios',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Canales',
            fields=[
                ('id_canal', models.AutoField(db_column='ID_CANAL', primary_key=True, serialize=False)),
                ('nombre', models.CharField(db_column='NOMBRE', max_length=100)),
                ('unidades', models.CharField(db_column='UNIDADES', max_length=20)),
                ('tabla_bd', models.CharField(blank=True, db_column='TABLA_BD', max_length=100, null=True)),
                ('id_canal_hist', models.IntegerField(blank=True, db_column='ID_CANAL_HIST', null=True)),
                ('tabla_bd_hist', models.CharField(blank=True, db_column='TABLA_BD_HIST', max_length=100, null=True)),
            ],
            options={
                'db_table': 'canales',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContactosMunicipios',
            fields=[
                ('id_contacto', models.AutoField(db_column='ID_CONTACTO', primary_key=True, serialize=False)),
                ('nombre', models.CharField(db_column='NOMBRE', max_length=200)),
                ('apellidos', models.CharField(db_column='APELLIDOS', max_length=200)),
                ('telefono', models.IntegerField(db_column='TELEFONO')),
                ('oficio', models.CharField(blank=True, db_column='OFICIO', max_length=200, null=True)),
            ],
            options={
                'db_table': 'contactos_municipios',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Credenciales',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('id_red', models.IntegerField(db_column='ID_RED')),
                ('clave', models.CharField(db_collation='utf8_general_ci', db_column='CLAVE', max_length=10000)),
            ],
            options={
                'db_table': 'credenciales',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DocumentacionAdjunto',
            fields=[
                ('id_documento', models.AutoField(db_column='ID_DOCUMENTO', primary_key=True, serialize=False)),
                ('nombre', models.CharField(db_column='NOMBRE', max_length=100)),
                ('extension', models.CharField(db_column='EXTENSION', max_length=100)),
                ('size', models.IntegerField(db_column='SIZE')),
                ('ruta', models.CharField(db_column='RUTA', max_length=500)),
            ],
            options={
                'db_table': 'documentacion_adjunto',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Estaciones',
            fields=[
                ('id_estacion', models.AutoField(db_column='ID_ESTACION', primary_key=True, serialize=False)),
                ('nombre', models.CharField(db_column='NOMBRE', max_length=45)),
                ('monitorizar', models.IntegerField(db_column='MONITORIZAR')),
                ('visualizar', models.IntegerField(db_column='VISUALIZAR')),
                ('sensor_lat', models.FloatField(blank=True, db_column='SENSOR_LAT', null=True)),
                ('sensor_lon', models.FloatField(blank=True, db_column='SENSOR_LON', null=True)),
                ('estacion_lat', models.FloatField(blank=True, db_column='ESTACION_LAT', null=True)),
                ('estacion_lon', models.FloatField(blank=True, db_column='ESTACION_LON', null=True)),
                ('cod_externo', models.CharField(blank=True, db_column='COD_EXTERNO', max_length=200, null=True)),
                ('widget_aemet', models.CharField(blank=True, db_column='WIDGET_AEMET', max_length=100, null=True)),
            ],
            options={
                'db_table': 'estaciones',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Eventos',
            fields=[
                ('id_evento', models.AutoField(db_column='ID_EVENTO', primary_key=True, serialize=False)),
                ('titulo', models.CharField(db_column='TITULO', max_length=100)),
                ('fecha_hora_inicio', models.DateTimeField(db_column='FECHA_HORA_INICIO')),
                ('fecha_hora_fin', models.DateTimeField(blank=True, db_column='FECHA_HORA_FIN', null=True)),
                ('estado', models.PositiveIntegerField(db_column='ESTADO')),
            ],
            options={
                'db_table': 'eventos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FicherosPrediccionAemet48H',
            fields=[
                ('hora_prediccion', models.IntegerField(db_column='HORA_PREDICCION', primary_key=True, serialize=False)),
                ('hora_simulacion', models.IntegerField(db_column='HORA_SIMULACION')),
                ('nombre_fichero', models.CharField(db_column='NOMBRE_FICHERO', max_length=100)),
                ('fecha_simulacion_utc', models.DateTimeField(db_column='FECHA_SIMULACION_UTC')),
                ('fecha_prediccion_utc', models.DateTimeField(db_column='FECHA_PREDICCION_UTC')),
                ('fichero', models.TextField(blank=True, db_column='FICHERO', null=True)),
            ],
            options={
                'db_table': 'ficheros_prediccion_aemet_48h',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InformesTrimestrales',
            fields=[
                ('id_informe', models.AutoField(db_column='ID_INFORME', primary_key=True, serialize=False)),
                ('id_cuatrimestre', models.IntegerField(db_column='ID_CUATRIMESTRE')),
                ('year', models.IntegerField(db_column='YEAR')),
                ('fecha_hora_local_inicio', models.DateTimeField(db_column='FECHA_HORA_LOCAL_INICIO')),
                ('fecha_hora_local_fin', models.DateTimeField(db_column='FECHA_HORA_LOCAL_FIN')),
                ('nombre', models.CharField(db_column='NOMBRE', max_length=200)),
                ('size', models.IntegerField(db_column='SIZE')),
                ('ruta', models.CharField(db_column='RUTA', max_length=200)),
                ('fecha_hora_subida', models.DateTimeField(db_column='FECHA_HORA_SUBIDA')),
            ],
            options={
                'db_table': 'informes_trimestrales',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OperatividadApps',
            fields=[
                ('nombre', models.CharField(db_column='NOMBRE', max_length=200, primary_key=True, serialize=False)),
                ('ejecutar', models.IntegerField(blank=True, db_column='EJECUTAR', null=True)),
                ('nombre_ejecutable', models.CharField(blank=True, db_column='NOMBRE_EJECUTABLE', max_length=100, null=True)),
                ('periodo_ejecucion', models.IntegerField(db_column='PERIODO_EJECUCION')),
                ('num_periodos_alarma', models.IntegerField(db_column='NUM_PERIODOS_ALARMA')),
                ('ultima_ejecucion', models.DateTimeField(blank=True, db_column='ULTIMA_EJECUCION', null=True)),
                ('error', models.IntegerField(blank=True, db_column='ERROR', null=True)),
            ],
            options={
                'db_table': 'operatividad_apps',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Redes',
            fields=[
                ('id_red', models.AutoField(db_column='ID_RED', primary_key=True, serialize=False)),
                ('nombre', models.CharField(db_column='NOMBRE', max_length=100)),
            ],
            options={
                'db_table': 'redes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelacionEstacionCanales',
            fields=[
                ('id_estacion', models.IntegerField(db_column='ID_ESTACION', primary_key=True, serialize=False)),
                ('id_canal', models.IntegerField(db_column='ID_CANAL')),
                ('cod_externo_canal', models.CharField(blank=True, db_column='COD_EXTERNO_CANAL', max_length=200, null=True)),
            ],
            options={
                'db_table': 'relacion_estacion_canales',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelacionEstacionSaih',
            fields=[
                ('estacion_id', models.IntegerField(db_column='ESTACION_ID', primary_key=True, serialize=False)),
                ('id_saih', models.CharField(db_column='ID_SAIH', max_length=200)),
                ('monitorizar', models.IntegerField(blank=True, db_column='MONITORIZAR', null=True)),
            ],
            options={
                'db_table': 'relacion_estacion_saih',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelacionParametroCanal',
            fields=[
                ('id_parametro', models.IntegerField(db_column='ID_PARAMETRO', primary_key=True, serialize=False)),
                ('tabla_bd', models.CharField(db_column='TABLA_BD', max_length=100)),
            ],
            options={
                'db_table': 'relacion_parametro_canal',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SubcuencasExtremadura',
            fields=[
                ('id_subcuenca', models.IntegerField(db_column='ID_SUBCUENCA', primary_key=True, serialize=False)),
                ('nombre', models.CharField(db_column='NOMBRE', max_length=100)),
                ('cuenca', models.CharField(blank=True, db_column='CUENCA', max_length=100, null=True)),
            ],
            options={
                'db_table': 'subcuencas_extremadura',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SucesosInundacion',
            fields=[
                ('id_suceso', models.AutoField(db_column='ID_SUCESO', primary_key=True, serialize=False)),
                ('rotulo', models.CharField(db_column='ROTULO', max_length=100)),
                ('descripcion', models.CharField(db_column='DESCRIPCION', max_length=500)),
                ('fecha_hora_local', models.DateTimeField(db_column='FECHA_HORA_LOCAL')),
                ('imagen', models.TextField(db_column='IMAGEN')),
            ],
            options={
                'db_table': 'sucesos_inundacion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TipoEstaciones',
            fields=[
                ('id_tipo', models.AutoField(db_column='ID_TIPO', primary_key=True, serialize=False)),
                ('nombre', models.CharField(db_column='NOMBRE', max_length=100)),
            ],
            options={
                'db_table': 'tipo_estaciones',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ZonaMeteoalertaAemet',
            fields=[
                ('id_zona_meteo_aemet', models.IntegerField(db_column='ID_ZONA_METEO_AEMET', primary_key=True, serialize=False)),
                ('nombre', models.CharField(db_column='NOMBRE', max_length=255)),
                ('codigo_externo', models.CharField(db_column='CODIGO_EXTERNO', max_length=100)),
                ('estado', models.CharField(blank=True, db_column='ESTADO', max_length=255, null=True)),
            ],
            options={
                'db_table': 'zona_meteoalerta_aemet',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ParamsPredNivelCurvaRecesion',
            fields=[
                ('id_estacion', models.OneToOneField(db_column='ID_ESTACION', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='spida.estaciones')),
                ('a', models.FloatField(db_column='A')),
                ('alpha', models.FloatField(db_column='ALPHA')),
                ('b', models.FloatField(db_column='B')),
                ('beta', models.FloatField(db_column='BETA')),
                ('h0', models.FloatField(db_column='H0')),
                ('error', models.FloatField(db_column='ERROR')),
            ],
            options={
                'db_table': 'params_pred_nivel_curva_recesion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Prediccion24H',
            fields=[
                ('id_estacion', models.OneToOneField(db_column='ID_ESTACION', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='spida.estaciones')),
                ('id_pred', models.IntegerField(db_column='ID_PRED')),
                ('fecha_hora_utc', models.DateTimeField(db_column='FECHA_HORA_UTC')),
                ('fecha_hora_local', models.DateTimeField(db_column='FECHA_HORA_LOCAL')),
                ('valor', models.FloatField(db_column='VALOR')),
            ],
            options={
                'db_table': 'prediccion_24h',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelacionEstacionesMeteo',
            fields=[
                ('id_estacion_hidro', models.OneToOneField(db_column='ID_ESTACION_HIDRO', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='spida.estaciones')),
                ('id_estacion_pluvio', models.IntegerField(db_column='ID_ESTACION_PLUVIO')),
                ('area_porcentual', models.FloatField(db_column='AREA_PORCENTUAL')),
            ],
            options={
                'db_table': 'relacion_estaciones_meteo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UltimasImagenes',
            fields=[
                ('id_estacion', models.OneToOneField(db_column='ID_ESTACION', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='spida.estaciones')),
                ('id_camara', models.IntegerField(db_column='ID_CAMARA')),
                ('fecha_hora_utc', models.DateTimeField(blank=True, db_column='FECHA_HORA_UTC', null=True)),
                ('fecha_hora_local', models.DateTimeField(blank=True, db_column='FECHA_HORA_LOCAL', null=True)),
                ('imagen', models.TextField(blank=True, db_column='IMAGEN', null=True)),
                ('miniatura', models.TextField(blank=True, db_column='MINIATURA', null=True)),
            ],
            options={
                'db_table': 'ultimas_imagenes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UltimosValores',
            fields=[
                ('id_estacion', models.OneToOneField(db_column='ID_ESTACION', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='spida.estaciones')),
                ('fecha_hora_utc', models.DateTimeField(db_column='FECHA_HORA_UTC')),
                ('fecha_hora_local', models.DateTimeField(db_column='FECHA_HORA_LOCAL')),
                ('valor', models.FloatField(db_column='VALOR')),
                ('valido', models.IntegerField(db_column='VALIDO')),
            ],
            options={
                'db_table': 'ultimos_valores',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UmbralesRios',
            fields=[
                ('id_estacion', models.OneToOneField(db_column='ID_ESTACION', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='spida.estaciones')),
                ('limite_n0', models.IntegerField(db_column='LIMITE_N0')),
                ('limite_n1', models.IntegerField(db_column='LIMITE_N1')),
                ('limite_n2', models.IntegerField(db_column='LIMITE_N2')),
                ('limite_n3', models.IntegerField(db_column='LIMITE_N3')),
                ('limite_desbordamiento', models.FloatField(db_column='LIMITE_DESBORDAMIENTO')),
                ('nivel_t10', models.FloatField(blank=True, db_column='NIVEL_T10', null=True)),
                ('nivel_t100', models.FloatField(blank=True, db_column='NIVEL_T100', null=True)),
                ('nivel_t500', models.FloatField(blank=True, db_column='NIVEL_T500', null=True)),
                ('observaciones', models.CharField(blank=True, db_column='OBSERVACIONES', max_length=200, null=True)),
                ('id_arpsis', models.CharField(blank=True, db_column='ID_ARPSIS', max_length=100, null=True)),
            ],
            options={
                'db_table': 'umbrales_rios',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ValoresPrecipitacion10D',
            fields=[
                ('id_estacion', models.OneToOneField(db_column='ID_ESTACION', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='spida.estaciones')),
                ('fecha_hora_utc', models.DateTimeField(db_column='FECHA_HORA_UTC')),
                ('fecha_hora_local', models.DateTimeField(db_column='FECHA_HORA_LOCAL')),
                ('valor', models.FloatField(db_column='VALOR')),
                ('valido', models.IntegerField(db_column='VALIDO')),
            ],
            options={
                'db_table': 'valores_precipitacion_10d',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ValoresSpida10D',
            fields=[
                ('id_estacion', models.OneToOneField(db_column='ID_ESTACION', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='spida.estaciones')),
                ('fecha_hora_utc', models.DateTimeField(db_column='FECHA_HORA_UTC')),
                ('fecha_hora_local', models.DateTimeField(db_column='FECHA_HORA_LOCAL')),
                ('valor', models.FloatField(db_column='VALOR')),
                ('valido', models.IntegerField(db_column='VALIDO')),
            ],
            options={
                'db_table': 'valores_spida_10d',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ValoresVisualizados10D',
            fields=[
                ('id_estacion', models.OneToOneField(db_column='ID_ESTACION', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='spida.estaciones')),
                ('fecha_hora_utc', models.DateTimeField(db_column='FECHA_HORA_UTC')),
                ('fecha_hora_local', models.DateTimeField(db_column='FECHA_HORA_LOCAL')),
                ('valor', models.FloatField(db_column='VALOR')),
                ('valido', models.IntegerField(db_column='VALIDO')),
            ],
            options={
                'db_table': 'valores_visualizados_10d',
                'managed': False,
            },
        ),
    ]
